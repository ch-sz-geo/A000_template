name: Pages Publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # [pull_request_target]
  push:
    branches: [ master, main ]
    paths:
      - 'docs/*'
      - 'themes/*'
      - 'docs/modelldokumentation/*'
      - 'docs/erfassungsrichtlinien/*'
      - 'docs/img/*'
      - 'index.html'
  pull_request:
    branches: [ master, main ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions: 
      contents: write
      pull-requests: write
      pages: write
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install Ruby
        run: |
          # Stelle sicher, dass ruby-build installiert ist
          if ! command -v ruby-build &> /dev/null; then
            git clone https://github.com/rbenv/ruby-build.git
            sudo ./ruby-build/install.sh
          fi

          # Installiere Ruby in den Tool-Cache
          ruby-build 3.1.4 /opt/hostedtoolcache/Ruby/3.1.4/x64

          # Markiere die Installation als abgeschlossen
          touch /opt/hostedtoolcache/Ruby/3.1.4/x64.complete
      - name: Ensure Ruby installation is not parallelized
        run: |
          mkdir -p /tmp/ruby-install-lock
          flock /tmp/ruby-install-lock ruby-build 3.1.4 /opt/hostedtoolcache/Ruby/3.1.4/x64
      - name: Check Ruby Version
        run: ruby --version
      - name: install Gem
        run: gem install asciidoctor
      - name: create file
        run: |
          asciidoctor -o ./docs/modelldokumentation.html ./docs/modelldokumentation/modelldokumentation.adoc
          asciidoctor -o ./docs/erfassungsrichtlinien.html ./docs/erfassungsrichtlinien/erfassungsrichtlinien.adoc
      - name: install Asciidoc Pdf
        run: gem install asciidoctor-pdf
      - name: create pdfs
        run: |
          asciidoctor-pdf --theme ./themes/pdfTheme.yml -o ./docs/modelldokumentation.pdf ./docs/modelldokumentation/modelldokumentation.adoc
          asciidoctor-pdf --theme ./themes/pdfTheme.yml -o ./docs/erfassungsrichtlinien.pdf ./docs/erfassungsrichtlinien/erfassungsrichtlinien.adoc
      - name: Commit HTML
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git add .
          git diff-index --quiet HEAD || git commit -m "Generate HTML from AsciiDoc" && git push
